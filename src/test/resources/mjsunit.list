#
# Copyright (c) 2012-2015 Andr√© Bargull
# Alle Rechte vorbehalten / All Rights Reserved.  Use is subject to license terms.
#
# <https://github.com/anba/es6draft>
#

# TypedArray implementation vs. spec issues:
# - offsets/lengths with fractional part is a RangeError
# - no simple ToNumber() conversion for offsets/lengths values
# - invalid offsets throw RangeError instead of TypeError
# - DataView is callable without `new`
harmony/typedarrays.js

# V8 does not implement %TypedArray% prototype object
es6/typed-array-iterator.js

# invalid test `function f(x){function x(){}}` is valid syntax
harmony/block-conflicts.js
harmony/regress/regress-2243.js

# invalid test, assignment on const not early errors
harmony/block-const-assign.js
harmony/block-early-errors.js
harmony/block-let-declaration.js

# V8 generators: missing type checks in v8-implementation
es6/generators-iteration.js

# AssignmentExpression optional in YieldStatement
es6/generators-parsing.js

# non-strict equality fails when comparing symbols and primitive values against each other
es6/iteration-semantics.js

# RegExp: invalid test, match/replace call Put("lastIndex", 0) if global
regress/regress-2438.js

# spec issue/invalid test, GetViewValue() throws RangeError instead of TypeError for invalid indices
harmony/dataview-accessors.js

# invalid test, ToDateTimeOptions does not alter input options object
regress/regress-builtinbust-7.js

# TODO: Add new v8-compat mode?
# .caller and .arguments in sloppy generator functions are poison-pilled in V8
es6/generators-poisoned-properties.js
es6/generators-runtime.js

# direct eval() and lexical declarations
regress/regress-1213575.js

# unscopables as accessor not valid in V8
es6/unscopables.js

# GetBindingValue invokes HasBinding for Object Environment Records, not supported in V8
harmony/proxies-with-unscopables.js

# Array.prototype.{find, findIndex} don't skip holes in v8
harmony/array-find.js
harmony/array-findIndex.js

# v8 does not follow spec
harmony/regexp-sticky.js

# v8 does not follow spec
harmony/super.js

# v8 does not add inferred name to classes
harmony/classes.js

# Rename String.prototype.contains -> String.prototype.includes (rev 29?)
harmony/string-includes.js

# let, etc. restricted to strict-mode in v8
harmony/block-non-strict-errors.js

# @@species not supported in v8
harmony/array-from.js

# RegExp.prototype.flags is non-configurable in v8
harmony/regexp-flags.js


###################
# Misc issues     #
###################

# RegExp differences Java<->JavaScript (resp. V8)
regexp-capture.js
regexp-lookahead.js
regexp-loop-capture.js
regexp-UC16.js
regress/regress-176.js
third_party/regexp-pcre.js

# repeat in qualifier too large
regexp.js
regress/regress-126412.js


############################################
# Misc proxy implementation isssues        #
############################################

# old Proxy API not completly emulated
harmony/proxies-for.js
harmony/proxies-hash.js
harmony/proxies-json.js
harmony/proxies-symbols.js
harmony/proxies.js
harmony/regress/regress-2219.js
harmony/regress/regress-2225.js
harmony/regress/regress-lookup-transition.js


############################################
# Implementation specific differences      #
############################################

# different error message
apply.js
array-reduce.js
big-array-literal.js
big-object-literal.js
error-accessors.js
function-call.js
instanceof-2.js
object-create.js
object-define-properties.js
object-freeze.js
object-get-own-property-names.js
object-prevent-extensions.js
object-seal.js
regress/regress-1591.js
regress/regress-1980.js
regress/regress-3159.js
regress/regress-crbug-109362.js

# forward-slash not escaped in RegExp
compiler/literals.js
regress/regress-3229.js

# \n\r are two separate line terminators
newline-in-string.js

# Date.parse incompatibility
date-parse.js
json.js
regress/regress-396.js

# for-in order
enumeration-order.js

# cannot seal/freeze TypedArrays in V8
regress/regress-95920.js

# __defineGetter__ does not throw in V8
regress/regress-1240.js

# truncate vs. rounding in milliseconds field of iso-date
regress/regress-944.js

# Date.prototype.toUTCString and Date.prototype.toGMTString distinct objects in V8
function-names.js

# different maximum arguments size
regress/regress-3027.js
regress/regress-331444.js
regress/regress-358090.js

# Error.prototype.message is limited to 350 characters in V8
error-tostring-omit.js

# different precision for Math.hypot()
es6/math-hypot.js

# V8 throws RangeError if strings exceed internal limit
regress/regress-336820.js
string-oom-array-join.js
string-oom-concat.js
string-oom-replace-global-regexp-with-string.js
string-oom-replace-regexp-global-with-function.js

# .stack is an own accessor property on error objects in V8
regress/regress-3404.js
stack-traces-overflow.js

# v8 restriction test
regexp-not-sticky-yet.js

# flag "--noharmony-strings" not implemented
harmony/disable-harmony-string.js


############################################
# Unsupported built-in object functions    #
############################################

# V8 StackTrace API
regress/regress-crbug-393988.js
regress/regress-2564.js
regress/regress-conditional-position.js
regress/regress-function-constructor-receiver.js
stack-traces.js
stack-traces-2.js
stack-traces-custom-lazy.js
eval-stack-trace.js

# V8 Realm API
contextual-calls.js
cross-realm-filtering.js
regress/regress-280531.js

# readbuffer function
regress/d8-readbuffer.js

# Object.observe
es7/regress/regress-443982.js
regress/regress-3315.js
regress/regress-356589.js
regress/regress-417709a.js
regress/regress-417709b.js
harmony/regress/regress-3750.js
harmony/regress/regress-405844.js


#######################################
# Test for syntax extensions          #
#######################################

# Inline module syntax
harmony/module-linking.js
harmony/module-parsing.js
harmony/module-recompile.js
harmony/module-resolution.js


###############################################################
# ES6 (rev14) <Object>.prototype no longer instance of <Type> #
###############################################################

# Array.prototype no longer instanceof Array
length.js

# String.prototype no longer instanceof String
regress/regress-1062422.js

# RegExp.prototype no longer instanceof RegExp
regress/regress-1217.js


#######################################
# ES6 related runtime changes         #
#######################################

# built-in function poisoned
function-arguments-null.js
fuzz-accessors.js

# built-in functions not exposed in caller
function-caller.js
regress/regress-105.js

# Object.getPrototypeOf() wraps/ignores primitives
get-prototype-of.js
harmony/set-prototype-of.js

# Function.length is configurable
regress/regress-function-length-strict.js
regress/regress-1419.js
regress/regress-1530.js

# Function.name is configurable
regress/regress-270142.js

# ToLength() moved array length restriction to 2^53-1
array-indexing.js
array-length.js

# String.prototype.split changed to call ToLength instead of ToUint32 on limit argument
string-split.js

# RegExp.prototype.compile requires extensible object
regress/regress-349870.js

# RegExp.prototype.test fetches "exec" dynamically
regexp-string-methods.js

# Function.prototype.{arguments,caller} now configurable=true for bound functions
function-bind.js

# "get " prefix for getter accessor function names
object-literal.js

# %TypedArray% intrinsic not available in V8
harmony/typedarrays-of.js

# assignment to const binding is always a runtime error, regardless of strict mode
const.js
constant-folding.js


#######################################
# ES6 related syntax changes          #
#######################################

# various strict-mode restrictions which only apply to ES5
strict-mode.js

# function declaration not in block
regress/regress-220.js

# temp dead zone const, const redeclarations etc.
const-declaration.js
const-redecl.js

# function declarations are block scoped
regress/regress-91120.js

# different scope for const
declare-locally.js
regress/regress-1170.js
regress/regress-1178598.js
regress/regress-1182832.js
regress/regress-186.js
regress/regress-2506.js
regress/regress-3138.js
regress/regress-641.js
regress/regress-88591.js

# const without initializer
global-const-var-conflicts.js
property-load-across-eval.js
regress/regress-1130.js
regress/regress-1201933.js
regress/regress-1207276.js
regress/regress-799761.js
regress/regress-handle-illegal-redeclaration.js

# Static Semantics: Early errors invalid LHS
invalid-lhs.js
serialize-embedded-error.js

# Static Semantics: Early Error for invalid RegExp flags (unicode escaped)
regress/regress-136048.js

# Static Semantics: Early Error for RegExp pattern
regress/regress-crbug-435825.js

# for-in with initializer
for-in.js

# var-declaration on global only calls setter when executed
regress/regress-1119.js

# MethodDefinition syntax not supported
regress/regress-parse-object-literal.js

# HexEscapeSequence not available in v8?
harmony/templates.js


#######################################
# Compilation or runtime issues       #
#######################################

# Method code too large
# too many arguments
regress/regress-1122.js

# Different maximal stack depth
regress/regress-353551.js

# StackOverflowError during invokedynamic linking (intermittent)
regress/regress-1132.js
regress/regress-148378.js

# Timeout (slow)
json-parser-recursive.js
unicodelctest.js
unicodelctest-no-optimization.js

# Timeout
ascii-regexp-subject.js
mul-exhaustive-part1.js
mul-exhaustive-part2.js
mul-exhaustive-part3.js
mul-exhaustive-part4.js
mul-exhaustive-part5.js
mul-exhaustive-part6.js
mul-exhaustive-part7.js
mul-exhaustive-part8.js
mul-exhaustive-part9.js
mul-exhaustive-part10.js
regexp-capture-3.js
regress/regress-1200351.js
regress/regress-581.js
regress/regress-634.js
regress/regress-685.js
regress/regress-deep-proto.js
regress/regress-splice-large-index.js
compiler/expression-trees.js
compiler/regress-4.js
compiler/regress-arguments.js
compiler/regress-rep-change.js
